apply plugin: 'com.android.library'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'com.fernandocejas.frodo'

android {
    def globalConfiguration = rootProject.extensions.getByName("ext")

    compileSdkVersion globalConfiguration.getAt("androidCompileSdkVersion")
    buildToolsVersion globalConfiguration.getAt("androidBuildToolsVersion")

    defaultConfig {
        minSdkVersion globalConfiguration.getAt("androidMinSdkVersion")
        targetSdkVersion globalConfiguration.getAt("androidTargetSdkVersion")
        versionCode globalConfiguration.getAt("androidVersionCode")
        vectorDrawables.useSupportLibrary = true
    }
    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
    }
}

configurations {
    provided
}
sourceSets {
    main {
        compileClasspath += configurations.provided
    }
}

def daggerVersion = '2.0.2'
def rxJavaVersion = '1.0.14'
def javaxAnnotationVersion = '1.0'
def retrolambdaVersion = '2.0.6'

//Testing
def robolectricVersion = '3.0'
def jUnitVersion = '4.12'
def assertJVersion = '1.7.1'
def mockitoVersion = '1.9.5'

//region Domain
def domainDependencies = [
        daggerCompiler : "com.google.dagger:dagger-compiler:${daggerVersion}",
        dagger         : "com.google.dagger:dagger:${daggerVersion}",
        javaxAnnotation: "javax.annotation:jsr250-api:${javaxAnnotationVersion}",
        rxJava         : "io.reactivex:rxjava:${rxJavaVersion}",
        lambda         : "net.orfjackal.retrolambda:retrolambda:${retrolambdaVersion}",
]

def domainTestDependencies = [
        junit      : "junit:junit:${jUnitVersion}",
        mockito    : "org.mockito:mockito-core:${mockitoVersion}",
        robolectric: "org.robolectric:robolectric:${robolectricVersion}",
        assertj    : "org.assertj:assertj-core:${assertJVersion}",
]
//endregion

dependencies {

    provided domainDependencies.daggerCompiler
    provided domainDependencies.javaxAnnotation

    compile domainDependencies.dagger
    compile domainDependencies.rxJava
    retrolambdaConfig domainDependencies.lambda

    testCompile domainTestDependencies.junit
    testCompile domainTestDependencies.mockito
    testCompile domainTestDependencies.robolectric
    testCompile domainTestDependencies.assertj
}
